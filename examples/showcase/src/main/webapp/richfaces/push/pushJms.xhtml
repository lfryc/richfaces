<!--
  JBoss, Home of Professional Open Source
  Copyright 2013, Red Hat, Inc. and individual contributors
  by the @authors tag. See the copyright.txt in the distribution for a
  full listing of individual contributors.

  This is free software; you can redistribute it and/or modify it
  under the terms of the GNU Lesser General Public License as
  published by the Free Software Foundation; either version 2.1 of
  the License, or (at your option) any later version.

  This software is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public
  License along with this software; if not, write to the Free
  Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
  02110-1301 USA, or see the FSF site: http://www.fsf.org.
  -->

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:h="http://java.sun.com/jsf/html" xmlns:f="http://java.sun.com/jsf/core"
    xmlns:ui="http://java.sun.com/jsf/facelets" xmlns:rich="http://richfaces.org/rich">

<ui:composition>
    <p>
        This example introduces the <b>Push via JMS</b> capability - messages from the <i>Java Messaging System</i> are observed by <i>RichFaces
            Push</i> and transported via <i>Comet</i> to the client.
    </p>

    <rich:panel>
        <ui:include src="#{demoNavigator.sampleIncludeURI}" />
    </rich:panel>

    <p>
        For the purpose of observing events from the server, the client creates a <b>permanent connection</b> to the server either by using a
        <i>WebSocket connection</i> or the <i>long-polling method</i>. Permanent connections are managed by the <i>Atmosphere
            Framework</i>.
    </p>

    <p>In this example the <b>Message payload</b> is serialized to JSON and transfered to the client. On the client-side, a <b><tt>dataavailable</tt></b>
        event is triggered with the <b><tt>event.rf.data</tt></b> payload which contains the serialized data.</p>
        
    <ui:include src="/templates/includes/source-view.xhtml">
        <ui:param name="src" value="#{demoNavigator.sampleIncludeURI}" />
        <ui:param name="sourceType" value="xhtml" />
        <ui:param name="openLabel" value="View Source" />
        <ui:param name="hideLabel" value="Hide Source" />
    </ui:include>
    <ui:include src="/templates/includes/source-view.xhtml">
        <ui:param name="src" value="/WEB-INF/src/org/richfaces/demo/push/JMSMessageProducer.java" />
        <ui:param name="sourceType" value="java" />
        <ui:param name="openLabel" value="View JMS Message Producer" />
        <ui:param name="hideLabel" value="Hide JMS Message Producer" />
    </ui:include>
</ui:composition>
</html>